"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/DiscussionMessages.tsx":
/*!***********************************************!*\
  !*** ./src/components/DiscussionMessages.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DiscussionMessages; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui/button */ \"(app-pages-browser)/./src/components/ui/button.tsx\");\n/* harmony import */ var _ui_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/input */ \"(app-pages-browser)/./src/components/ui/input.tsx\");\n/* harmony import */ var _ui_popup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui/popup */ \"(app-pages-browser)/./src/components/ui/popup.tsx\");\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/contexts/AuthContext */ \"(app-pages-browser)/./src/contexts/AuthContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction DiscussionMessages(param) {\n    let { discussionId, discussionTitle, onBack } = param;\n    _s();\n    console.log(\"[DEBUG] DiscussionMessages component initialized with discussionId:\", discussionId);\n    const { user } = (0,_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__.useAuth)();\n    console.log(\"[DEBUG] User from AuthContext in DiscussionMessages:\", user);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [subDiscussions, setSubDiscussions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Helper function to format dates\n    const formatDate = (date)=>{\n        const now = new Date();\n        const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n        if (diffInSeconds < 60) {\n            return \"just now\";\n        } else if (diffInSeconds < 3600) {\n            const minutes = Math.floor(diffInSeconds / 60);\n            return \"\".concat(minutes, \" \").concat(minutes === 1 ? \"minute\" : \"minutes\", \" ago\");\n        } else if (diffInSeconds < 86400) {\n            const hours = Math.floor(diffInSeconds / 3600);\n            return \"\".concat(hours, \" \").concat(hours === 1 ? \"hour\" : \"hours\", \" ago\");\n        } else {\n            const days = Math.floor(diffInSeconds / 86400);\n            return \"\".concat(days, \" \").concat(days === 1 ? \"day\" : \"days\", \" ago\");\n        }\n    };\n    // Track locally added messages that haven't been confirmed from the server yet\n    const [pendingMessages, setPendingMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Use a ref to store the polling interval ID\n    const pollingIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Fetch messages and sub-discussions from the server\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"[DEBUG] DiscussionMessages useEffect running for discussionId:\", discussionId);\n        let isMounted = true; // Track if component is mounted\n        // Function to fetch data without setting up polling\n        const fetchData = async function() {\n            let showLoading = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n            console.log(\"[DEBUG] DiscussionMessages fetchData function called\");\n            if (!isMounted) return; // Don't proceed if component is unmounted\n            if (pendingMessages.length > 0 || !showLoading) {\n                // Don't show loading indicator when we have pending messages\n                // or when explicitly requested not to\n                setIsLoading(false);\n            } else {\n                setIsLoading(true);\n            }\n            try {\n                console.log(\"[DEBUG] Fetching messages and subdiscussions from API\");\n                // Fetch messages for the current discussion\n                const messagesResponse = await fetch(\"/api/messages?discussionId=\".concat(discussionId));\n                console.log(\"[DEBUG] Messages API response status:\", messagesResponse.status);\n                const subDiscussionsResponse = await fetch(\"/api/subdiscussions?discussionId=\".concat(discussionId));\n                console.log(\"[DEBUG] Subdiscussions API response status:\", subDiscussionsResponse.status);\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                if (!messagesResponse.ok || !subDiscussionsResponse.ok) {\n                    console.error(\"[DEBUG] API response not OK - Messages:\", messagesResponse.status, messagesResponse.statusText);\n                    console.error(\"[DEBUG] API response not OK - Subdiscussions:\", subDiscussionsResponse.status, subDiscussionsResponse.statusText);\n                    throw new Error(\"Failed to fetch data\");\n                }\n                const messagesData = await messagesResponse.json();\n                const subDiscussionsData = await subDiscussionsResponse.json();\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                console.log(\"[DEBUG] Raw messages data:\", messagesData);\n                // Separate messages into main discussion messages and sub-discussion messages\n                const mainDiscussionMessages = [];\n                const subDiscussionMessagesMap = new Map();\n                // Process all messages\n                messagesData.forEach((m)=>{\n                    const formattedMessage = {\n                        id: m.id,\n                        author: m.author,\n                        content: m.content,\n                        timestamp: formatDate(new Date(m.created_at)),\n                        serverId: m.id // Store the server ID for reference\n                    };\n                    if (m.subdiscussion_id) {\n                        var _subDiscussionMessagesMap_get;\n                        // This is a sub-discussion message\n                        const subId = m.subdiscussion_id;\n                        if (!subDiscussionMessagesMap.has(subId)) {\n                            subDiscussionMessagesMap.set(subId, []);\n                        }\n                        (_subDiscussionMessagesMap_get = subDiscussionMessagesMap.get(subId)) === null || _subDiscussionMessagesMap_get === void 0 ? void 0 : _subDiscussionMessagesMap_get.push(formattedMessage);\n                        console.log(\"[DEBUG] Added message to sub-discussion \".concat(subId, \":\"), formattedMessage);\n                    } else {\n                        // This is a main discussion message\n                        mainDiscussionMessages.push(formattedMessage);\n                    }\n                });\n                // Transform sub-discussions data and associate messages\n                const formattedSubDiscussions = subDiscussionsData.map((s)=>{\n                    const subMessages = subDiscussionMessagesMap.get(s.id) || [];\n                    console.log(\"[DEBUG] Sub-discussion \".concat(s.id, \" has \").concat(subMessages.length, \" messages\"));\n                    // Calculate the last message timestamp\n                    let lastMessageTime = s.created_at;\n                    if (subMessages.length > 0) {\n                        // Find the most recent message timestamp by looking at all messages\n                        // This is a fallback in case the messages aren't already sorted\n                        lastMessageTime = subMessages.reduce((latest, msg)=>{\n                            // Check if this message timestamp is more recent\n                            const msgTime = new Date(msg.timestamp).getTime();\n                            return msgTime > latest ? msgTime : latest;\n                        }, new Date(s.created_at).getTime());\n                    }\n                    return {\n                        id: s.id,\n                        title: s.title,\n                        createdAt: formatDate(new Date(s.created_at)),\n                        lastMessageAt: formatDate(new Date(lastMessageTime)),\n                        messages: subMessages,\n                        progress: s.progress || 0\n                    };\n                });\n                // Set main discussion messages\n                const formattedMessages = mainDiscussionMessages;\n                // If we have a selected sub-discussion, update its messages\n                if (selectedSubDiscussion) {\n                    const updatedSubDiscussion = formattedSubDiscussions.find((sd)=>sd.id === selectedSubDiscussion.id);\n                    if (updatedSubDiscussion) {\n                        console.log(\"[DEBUG] Updating selected sub-discussion \".concat(selectedSubDiscussion.id, \" with \").concat(updatedSubDiscussion.messages.length, \" messages\"));\n                        // Update the selected sub-discussion with new messages from the server\n                        setSelectedSubDiscussion(updatedSubDiscussion);\n                    }\n                }\n                // Check if any pending messages have been confirmed by the server\n                const confirmedMessageIds = formattedMessages.map((m)=>m.serverId);\n                const stillPendingMessages = pendingMessages.filter((pm)=>{\n                    // Keep messages that don't have a server ID yet or whose ID isn't in the confirmed list\n                    return !pm.serverId || !confirmedMessageIds.includes(pm.serverId);\n                });\n                // Combine server messages with any pending messages that haven't been confirmed yet\n                const combinedMessages = [\n                    ...formattedMessages,\n                    ...stillPendingMessages\n                ];\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                setMessages(combinedMessages);\n                setPendingMessages(stillPendingMessages);\n                setSubDiscussions(formattedSubDiscussions);\n            } catch (error) {\n                console.error(\"[DEBUG] Error fetching data:\", error);\n                // Only use fallback data if we have no messages yet and component is still mounted\n                if (isMounted && messages.length === 0 && pendingMessages.length === 0) {\n                    setMessages([\n                        {\n                            id: 1,\n                            author: \"Abhishek Yadav\",\n                            content: \"Hi everyone, I created this discussion to talk about the upcoming project.\",\n                            timestamp: \"2 days ago\"\n                        },\n                        {\n                            id: 2,\n                            author: \"Daiwik Neema\",\n                            content: \"Thanks for setting this up! I have a few ideas I'd like to share.\",\n                            timestamp: \"1 day ago\"\n                        },\n                        {\n                            id: 3,\n                            author: \"Yang Liu\",\n                            content: \"I've been working on some designs that might be relevant here.\",\n                            timestamp: \"10 hours ago\"\n                        }\n                    ]);\n                    setSubDiscussions([\n                        {\n                            id: 1,\n                            title: \"UI Implementation Plan\",\n                            createdAt: \"1 day ago\",\n                            lastMessageAt: \"1 day ago\",\n                            messages: [],\n                            progress: 30\n                        }\n                    ]);\n                }\n            } finally{\n                if (isMounted) {\n                    setIsLoading(false);\n                }\n            }\n        };\n        // Initial data fetch\n        fetchData();\n        // Set up polling to refresh data every 10 seconds, but only for new messages\n        // not for re-rendering the entire component\n        if (pollingIntervalRef.current) {\n            clearInterval(pollingIntervalRef.current);\n        }\n        pollingIntervalRef.current = setInterval(()=>{\n            // Use the silent fetch option to avoid showing loading indicators during polling\n            fetchData(false);\n        }, 10000); // Increased to 10 seconds to reduce load\n        // Cleanup function to prevent memory leaks and state updates after unmount\n        return ()=>{\n            isMounted = false;\n            if (pollingIntervalRef.current) {\n                clearInterval(pollingIntervalRef.current);\n                pollingIntervalRef.current = null;\n            }\n            console.log(\"[DEBUG] DiscussionMessages cleanup - interval cleared for discussionId:\", discussionId);\n        };\n    }, [\n        discussionId\n    ]); // Only re-run when discussionId changes\n    const [selectedSubDiscussion, setSelectedSubDiscussion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isNewSubDiscussionOpen, setIsNewSubDiscussionOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [newSubDiscussionTitle, setNewSubDiscussionTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [newMessage, setNewMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handleNewSubDiscussion = ()=>{\n        setIsNewSubDiscussionOpen(true);\n    };\n    const handleCreateSubDiscussion = async ()=>{\n        if (newSubDiscussionTitle.trim()) {\n            try {\n                console.log(\"[DEBUG] Creating sub-discussion with discussionId:\", discussionId);\n                const response = await fetch(\"/api/subdiscussions\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"auth_token\") || \"default-token\")\n                    },\n                    body: JSON.stringify({\n                        discussionId: discussionId,\n                        title: newSubDiscussionTitle.trim()\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to create sub-discussion\");\n                }\n                const newSubDiscussion = await response.json();\n                // Add the new sub-discussion to the state\n                setSubDiscussions((prev)=>[\n                        ...prev,\n                        {\n                            id: newSubDiscussion.id,\n                            title: newSubDiscussion.title,\n                            createdAt: \"just now\",\n                            lastMessageAt: \"just now\",\n                            messages: [],\n                            progress: 0\n                        }\n                    ]);\n                setNewSubDiscussionTitle(\"\");\n                setIsNewSubDiscussionOpen(false);\n            } catch (error) {\n                console.error(\"Error creating sub-discussion:\", error);\n                // Fallback to client-side creation if API fails\n                setSubDiscussions((prev)=>[\n                        ...prev,\n                        {\n                            id: Date.now(),\n                            title: newSubDiscussionTitle.trim(),\n                            createdAt: \"just now\",\n                            lastMessageAt: \"just now\",\n                            messages: [],\n                            progress: 0\n                        }\n                    ]);\n                setNewSubDiscussionTitle(\"\");\n                setIsNewSubDiscussionOpen(false);\n            }\n        }\n    };\n    const handleSendMessage = async (e)=>{\n        e.preventDefault();\n        if (newMessage.trim()) {\n            // Create a temporary ID for the pending message\n            const tempId = \"temp-\".concat(Date.now());\n            // Create a pending message to show immediately\n            const pendingMessage = {\n                id: tempId,\n                author: (user === null || user === void 0 ? void 0 : user.full_name) || \"You\",\n                content: newMessage.trim(),\n                timestamp: \"just now\",\n                isPending: true\n            };\n            console.log(\"[DEBUG] Creating pending message:\", pendingMessage);\n            console.log(\"[DEBUG] Selected sub-discussion:\", selectedSubDiscussion ? selectedSubDiscussion.id : \"none\");\n            // Add the pending message to the UI immediately\n            if (selectedSubDiscussion) {\n                // Update the selected sub-discussion with the new message\n                const updatedSubDiscussion = {\n                    ...selectedSubDiscussion,\n                    messages: [\n                        ...selectedSubDiscussion.messages,\n                        pendingMessage\n                    ]\n                };\n                // Update the sub-discussion in the state\n                setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? updatedSubDiscussion : sub));\n                // Also update the selectedSubDiscussion state to show the message immediately\n                setSelectedSubDiscussion(updatedSubDiscussion);\n                console.log(\"[DEBUG] Added message to sub-discussion UI:\", updatedSubDiscussion.messages.length);\n            } else {\n                // Add to both messages and pendingMessages for main discussion\n                setMessages((prev)=>[\n                        ...prev,\n                        pendingMessage\n                    ]);\n                setPendingMessages((prev)=>[\n                        ...prev,\n                        pendingMessage\n                    ]);\n                console.log(\"[DEBUG] Added message to main discussion UI\");\n            }\n            // Clear the input field immediately\n            setNewMessage(\"\");\n            try {\n                // Send the message to the server\n                const response = await fetch(\"/api/messages\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"auth_token\") || \"default-token\")\n                    },\n                    body: JSON.stringify({\n                        discussion_id: discussionId,\n                        subdiscussion_id: (selectedSubDiscussion === null || selectedSubDiscussion === void 0 ? void 0 : selectedSubDiscussion.id) || null,\n                        content: pendingMessage.content,\n                        username: (user === null || user === void 0 ? void 0 : user.full_name) || \"Anonymous\"\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to send message\");\n                }\n                const newMessageData = await response.json();\n                console.log(\"[DEBUG] Message saved to server with ID:\", newMessageData.id);\n                // Update the pending message with the server ID\n                if (selectedSubDiscussion) {\n                    // Create updated messages array with the server ID\n                    const updatedMessages = selectedSubDiscussion.messages.map((msg)=>msg.id.toString() === tempId ? {\n                            ...msg,\n                            id: newMessageData.id,\n                            serverId: newMessageData.id,\n                            isPending: false\n                        } : msg);\n                    // Create updated sub-discussion object\n                    const updatedSubDiscussion = {\n                        ...selectedSubDiscussion,\n                        messages: updatedMessages\n                    };\n                    // Update the sub-discussion in the state\n                    setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? updatedSubDiscussion : sub));\n                    // Also update the selectedSubDiscussion state to show the confirmed message\n                    setSelectedSubDiscussion(updatedSubDiscussion);\n                    console.log(\"[DEBUG] Updated sub-discussion messages with server ID:\", updatedMessages.length);\n                } else {\n                    // Update main discussion messages\n                    setMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                id: newMessageData.id,\n                                serverId: newMessageData.id,\n                                isPending: false\n                            } : msg));\n                    // Update the pending message in the pendingMessages array\n                    setPendingMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                id: newMessageData.id,\n                                serverId: newMessageData.id,\n                                isPending: false\n                            } : msg));\n                    console.log(\"[DEBUG] Updated main discussion messages with server ID\");\n                }\n            } catch (error) {\n                console.error(\"Error sending message:\", error);\n                // The message is already in the UI, so we don't need to add it again\n                // Just mark it as failed so the user knows it didn't send\n                if (selectedSubDiscussion) {\n                    setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? {\n                                ...sub,\n                                messages: sub.messages.map((msg)=>msg.id.toString() === tempId ? {\n                                        ...msg,\n                                        failed: true\n                                    } : msg)\n                            } : sub));\n                } else {\n                    setMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                failed: true\n                            } : msg));\n                }\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-6\",\n        children: [\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center items-center py-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 477,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2 text-gray-600\",\n                        children: \"Loading messages...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 478,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 476,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: selectedSubDiscussion ? ()=>setSelectedSubDiscussion(null) : onBack,\n                                variant: \"outline\",\n                                className: \"text-gray-600 hover:text-gray-900\",\n                                children: \"← Back\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 483,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-xl font-semibold text-gray-900\",\n                                        children: selectedSubDiscussion ? selectedSubDiscussion.title : discussionTitle\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 491,\n                                        columnNumber: 13\n                                    }, this),\n                                    selectedSubDiscussion && selectedSubDiscussion.progress !== undefined && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-600\",\n                                        children: [\n                                            \"Progress: \",\n                                            selectedSubDiscussion.progress,\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 495,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 490,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 482,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-2\",\n                        children: !selectedSubDiscussion && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            onClick: handleNewSubDiscussion,\n                            className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n                            children: \"+ New Sub-discussion\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 503,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 501,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 481,\n                columnNumber: 7\n            }, this),\n            !selectedSubDiscussion && subDiscussions.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-medium text-gray-900 mb-3\",\n                        children: \"Sub-discussions\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 515,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-2\",\n                        children: subDiscussions.map((sub)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                onClick: ()=>setSelectedSubDiscussion(sub),\n                                className: \"p-3 border rounded-md hover:bg-blue-50 cursor-pointer transition-colors\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                        className: \"font-medium text-gray-900\",\n                                        children: sub.title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 523,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: [\n                                            sub.messages.length,\n                                            \" messages • Last message \",\n                                            sub.lastMessageAt,\n                                            sub.progress !== undefined && \" • Progress: \".concat(sub.progress, \"%\")\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 524,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, sub.id, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 518,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 516,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 514,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4 mb-6 max-h-[600px] overflow-y-auto\",\n                children: (selectedSubDiscussion ? selectedSubDiscussion.messages : messages).map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"justify-end\" : \"justify-start\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-w-xs sm:max-w-md md:max-w-lg rounded-lg p-3 \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"bg-blue-500 text-white rounded-br-none\" : \"bg-gray-100 text-gray-900 rounded-bl-none\"),\n                            children: [\n                                message.author !== (user === null || user === void 0 ? void 0 : user.full_name) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs font-medium text-gray-500 mb-1\",\n                                    children: message.author\n                                }, void 0, false, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 550,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-sm\",\n                                    children: message.content\n                                }, void 0, false, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 554,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs mt-1 \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"text-blue-100\" : \"text-gray-500\"),\n                                    children: [\n                                        message.timestamp,\n                                        message.isPending && \" • Sending...\",\n                                        message.failed && \" • Failed to send\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 555,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 542,\n                            columnNumber: 13\n                        }, this)\n                    }, message.id, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 536,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 534,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSendMessage,\n                className: \"p-4 border-t\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            value: newMessage,\n                            onChange: (e)=>setNewMessage(e.target.value),\n                            placeholder: \"Type your message...\",\n                            className: \"flex-1 rounded-full border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 569,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: \"bg-indigo-600 text-white px-4 py-2 rounded-full hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\",\n                            children: \"Send\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 576,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                    lineNumber: 568,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 567,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.Dialog, {\n                open: isNewSubDiscussionOpen,\n                onOpenChange: setIsNewSubDiscussionOpen,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogHeader, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogTitle, {\n                            children: \"Create New Sub-discussion\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 587,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 586,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogContent, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-4 py-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                        children: \"Sub-discussion Title\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 592,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_input__WEBPACK_IMPORTED_MODULE_3__.Input, {\n                                        value: newSubDiscussionTitle,\n                                        onChange: (e)=>setNewSubDiscussionTitle(e.target.value),\n                                        placeholder: \"Enter sub-discussion title...\",\n                                        className: \"w-full\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 595,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 591,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 590,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 589,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogFooter, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"secondary\",\n                                onClick: ()=>setIsNewSubDiscussionOpen(false),\n                                children: \"Cancel\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 605,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: handleCreateSubDiscussion,\n                                className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n                                disabled: !newSubDiscussionTitle.trim(),\n                                children: \"Create Sub-discussion\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 611,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 604,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 585,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n        lineNumber: 474,\n        columnNumber: 5\n    }, this);\n}\n_s(DiscussionMessages, \"lZeoeJy54AhqKIuN/2qN7yqxWXM=\", false, function() {\n    return [\n        _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__.useAuth\n    ];\n});\n_c = DiscussionMessages;\nvar _c;\n$RefreshReg$(_c, \"DiscussionMessages\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0Rpc2N1c3Npb25NZXNzYWdlcy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUVvRDtBQUNmO0FBQ0Y7QUFDeUQ7QUFDM0M7QUEyQmxDLFNBQVNXLG1CQUFtQixLQUFrRTtRQUFsRSxFQUFFQyxZQUFZLEVBQUVDLGVBQWUsRUFBRUMsTUFBTSxFQUEyQixHQUFsRTs7SUFDekNDLFFBQVFDLEdBQUcsQ0FBQyx1RUFBdUVKO0lBQ25GLE1BQU0sRUFBRUssSUFBSSxFQUFFLEdBQUdQLDhEQUFPQTtJQUN4QkssUUFBUUMsR0FBRyxDQUFDLHdEQUF3REM7SUFFcEUsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUduQiwrQ0FBUUEsQ0FBWSxFQUFFO0lBQ3RELE1BQU0sQ0FBQ29CLGdCQUFnQkMsa0JBQWtCLEdBQUdyQiwrQ0FBUUEsQ0FBa0IsRUFBRTtJQUN4RSxNQUFNLENBQUNzQixXQUFXQyxhQUFhLEdBQUd2QiwrQ0FBUUEsQ0FBQztJQUUzQyxrQ0FBa0M7SUFDbEMsTUFBTXdCLGFBQWEsQ0FBQ0M7UUFDbEIsTUFBTUMsTUFBTSxJQUFJQztRQUNoQixNQUFNQyxnQkFBZ0JDLEtBQUtDLEtBQUssQ0FBQyxDQUFDSixJQUFJSyxPQUFPLEtBQUtOLEtBQUtNLE9BQU8sRUFBQyxJQUFLO1FBRXBFLElBQUlILGdCQUFnQixJQUFJO1lBQ3RCLE9BQU87UUFDVCxPQUFPLElBQUlBLGdCQUFnQixNQUFNO1lBQy9CLE1BQU1JLFVBQVVILEtBQUtDLEtBQUssQ0FBQ0YsZ0JBQWdCO1lBQzNDLE9BQU8sR0FBY0ksT0FBWEEsU0FBUSxLQUF3QyxPQUFyQ0EsWUFBWSxJQUFJLFdBQVcsV0FBVTtRQUM1RCxPQUFPLElBQUlKLGdCQUFnQixPQUFPO1lBQ2hDLE1BQU1LLFFBQVFKLEtBQUtDLEtBQUssQ0FBQ0YsZ0JBQWdCO1lBQ3pDLE9BQU8sR0FBWUssT0FBVEEsT0FBTSxLQUFrQyxPQUEvQkEsVUFBVSxJQUFJ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cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0Rpc2N1c3Npb25NZXNzYWdlcy50c3g/YWU2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4vdWkvYnV0dG9uJztcbmltcG9ydCB7IElucHV0IH0gZnJvbSAnLi91aS9pbnB1dCc7XG5pbXBvcnQgeyBEaWFsb2csIERpYWxvZ0hlYWRlciwgRGlhbG9nVGl0bGUsIERpYWxvZ0NvbnRlbnQsIERpYWxvZ0Zvb3RlciB9IGZyb20gJy4vdWkvcG9wdXAnO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gJ0AvY29udGV4dHMvQXV0aENvbnRleHQnO1xuXG5pbnRlcmZhY2UgRGlzY3Vzc2lvbk1lc3NhZ2VzUHJvcHMge1xuICBkaXNjdXNzaW9uSWQ6IG51bWJlcjtcbiAgZGlzY3Vzc2lvblRpdGxlOiBzdHJpbmc7XG4gIG9uQmFjazogKCkgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIE1lc3NhZ2Uge1xuICBpZDogbnVtYmVyIHwgc3RyaW5nO1xuICBhdXRob3I6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xuICB0aW1lc3RhbXA6IHN0cmluZztcbiAgc2VydmVySWQ/OiBudW1iZXI7XG4gIGlzUGVuZGluZz86IGJvb2xlYW47XG4gIGZhaWxlZD86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBTdWJEaXNjdXNzaW9uIHtcbiAgaWQ6IG51bWJlcjtcbiAgdGl0bGU6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIGxhc3RNZXNzYWdlQXQ6IHN0cmluZztcbiAgbWVzc2FnZXM6IE1lc3NhZ2VbXTtcbiAgcHJvZ3Jlc3M/OiBudW1iZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpc2N1c3Npb25NZXNzYWdlcyh7IGRpc2N1c3Npb25JZCwgZGlzY3Vzc2lvblRpdGxlLCBvbkJhY2sgfTogRGlzY3Vzc2lvbk1lc3NhZ2VzUHJvcHMpIHtcbiAgY29uc29sZS5sb2coJ1tERUJVR10gRGlzY3Vzc2lvbk1lc3NhZ2VzIGNvbXBvbmVudCBpbml0aWFsaXplZCB3aXRoIGRpc2N1c3Npb25JZDonLCBkaXNjdXNzaW9uSWQpO1xuICBjb25zdCB7IHVzZXIgfSA9IHVzZUF1dGgoKTtcbiAgY29uc29sZS5sb2coJ1tERUJVR10gVXNlciBmcm9tIEF1dGhDb250ZXh0IGluIERpc2N1c3Npb25NZXNzYWdlczonLCB1c2VyKTtcbiAgXG4gIGNvbnN0IFttZXNzYWdlcywgc2V0TWVzc2FnZXNdID0gdXNlU3RhdGU8TWVzc2FnZVtdPihbXSk7XG4gIGNvbnN0IFtzdWJEaXNjdXNzaW9ucywgc2V0U3ViRGlzY3Vzc2lvbnNdID0gdXNlU3RhdGU8U3ViRGlzY3Vzc2lvbltdPihbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgXG4gIC8vIEhlbHBlciBmdW5jdGlvbiB0byBmb3JtYXQgZGF0ZXNcbiAgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlOiBEYXRlKTogc3RyaW5nID0+IHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IGRpZmZJblNlY29uZHMgPSBNYXRoLmZsb29yKChub3cuZ2V0VGltZSgpIC0gZGF0ZS5nZXRUaW1lKCkpIC8gMTAwMCk7XG4gICAgXG4gICAgaWYgKGRpZmZJblNlY29uZHMgPCA2MCkge1xuICAgICAgcmV0dXJuICdqdXN0IG5vdyc7XG4gICAgfSBlbHNlIGlmIChkaWZmSW5TZWNvbmRzIDwgMzYwMCkge1xuICAgICAgY29uc3QgbWludXRlcyA9IE1hdGguZmxvb3IoZGlmZkluU2Vjb25kcyAvIDYwKTtcbiAgICAgIHJldHVybiBgJHttaW51dGVzfSAke21pbnV0ZXMgPT09IDEgPyAnbWludXRlJyA6ICdtaW51dGVzJ30gYWdvYDtcbiAgICB9IGVsc2UgaWYgKGRpZmZJblNlY29uZHMgPCA4NjQwMCkge1xuICAgICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKGRpZmZJblNlY29uZHMgLyAzNjAwKTtcbiAgICAgIHJldHVybiBgJHtob3Vyc30gJHtob3VycyA9PT0gMSA/ICdob3VyJyA6ICdob3Vycyd9IGFnb2A7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGRheXMgPSBNYXRoLmZsb29yKGRpZmZJblNlY29uZHMgLyA4NjQwMCk7XG4gICAgICByZXR1cm4gYCR7ZGF5c30gJHtkYXlzID09PSAxID8gJ2RheScgOiAnZGF5cyd9IGFnb2A7XG4gICAgfVxuICB9O1xuICBcbiAgLy8gVHJhY2sgbG9jYWxseSBhZGRlZCBtZXNzYWdlcyB0aGF0IGhhdmVuJ3QgYmVlbiBjb25maXJtZWQgZnJvbSB0aGUgc2VydmVyIHlldFxuICBjb25zdCBbcGVuZGluZ01lc3NhZ2VzLCBzZXRQZW5kaW5nTWVzc2FnZXNdID0gdXNlU3RhdGU8TWVzc2FnZVtdPihbXSk7XG4gIFxuICAvLyBVc2UgYSByZWYgdG8gc3RvcmUgdGhlIHBvbGxpbmcgaW50ZXJ2YWwgSURcbiAgY29uc3QgcG9sbGluZ0ludGVydmFsUmVmID0gdXNlUmVmPE5vZGVKUy5UaW1lb3V0IHwgbnVsbD4obnVsbCk7XG4gIFxuICAvLyBGZXRjaCBtZXNzYWdlcyBhbmQgc3ViLWRpc2N1c3Npb25zIGZyb20gdGhlIHNlcnZlclxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdbREVCVUddIERpc2N1c3Npb25NZXNzYWdlcyB1c2VFZmZlY3QgcnVubmluZyBmb3IgZGlzY3Vzc2lvbklkOicsIGRpc2N1c3Npb25JZCk7XG4gICAgbGV0IGlzTW91bnRlZCA9IHRydWU7IC8vIFRyYWNrIGlmIGNvbXBvbmVudCBpcyBtb3VudGVkXG4gICAgXG4gICAgLy8gRnVuY3Rpb24gdG8gZmV0Y2ggZGF0YSB3aXRob3V0IHNldHRpbmcgdXAgcG9sbGluZ1xuICAgIGNvbnN0IGZldGNoRGF0YSA9IGFzeW5jIChzaG93TG9hZGluZyA9IHRydWUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIERpc2N1c3Npb25NZXNzYWdlcyBmZXRjaERhdGEgZnVuY3Rpb24gY2FsbGVkJyk7XG4gICAgICBpZiAoIWlzTW91bnRlZCkgcmV0dXJuOyAvLyBEb24ndCBwcm9jZWVkIGlmIGNvbXBvbmVudCBpcyB1bm1vdW50ZWRcbiAgICAgIFxuICAgICAgaWYgKHBlbmRpbmdNZXNzYWdlcy5sZW5ndGggPiAwIHx8ICFzaG93TG9hZGluZykge1xuICAgICAgICAvLyBEb24ndCBzaG93IGxvYWRpbmcgaW5kaWNhdG9yIHdoZW4gd2UgaGF2ZSBwZW5kaW5nIG1lc3NhZ2VzXG4gICAgICAgIC8vIG9yIHdoZW4gZXhwbGljaXRseSByZXF1ZXN0ZWQgbm90IHRvXG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIEZldGNoaW5nIG1lc3NhZ2VzIGFuZCBzdWJkaXNjdXNzaW9ucyBmcm9tIEFQSScpO1xuICAgICAgICAvLyBGZXRjaCBtZXNzYWdlcyBmb3IgdGhlIGN1cnJlbnQgZGlzY3Vzc2lvblxuICAgICAgICBjb25zdCBtZXNzYWdlc1Jlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbWVzc2FnZXM/ZGlzY3Vzc2lvbklkPSR7ZGlzY3Vzc2lvbklkfWApO1xuICAgICAgICBjb25zb2xlLmxvZygnW0RFQlVHXSBNZXNzYWdlcyBBUEkgcmVzcG9uc2Ugc3RhdHVzOicsIG1lc3NhZ2VzUmVzcG9uc2Uuc3RhdHVzKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHN1YkRpc2N1c3Npb25zUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9zdWJkaXNjdXNzaW9ucz9kaXNjdXNzaW9uSWQ9JHtkaXNjdXNzaW9uSWR9YCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIFN1YmRpc2N1c3Npb25zIEFQSSByZXNwb25zZSBzdGF0dXM6Jywgc3ViRGlzY3Vzc2lvbnNSZXNwb25zZS5zdGF0dXMpO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFpc01vdW50ZWQpIHJldHVybjsgLy8gRG9uJ3QgcHJvY2VlZCBpZiBjb21wb25lbnQgaXMgdW5tb3VudGVkXG4gICAgICAgIFxuICAgICAgICBpZiAoIW1lc3NhZ2VzUmVzcG9uc2Uub2sgfHwgIXN1YkRpc2N1c3Npb25zUmVzcG9uc2Uub2spIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdbREVCVUddIEFQSSByZXNwb25zZSBub3QgT0sgLSBNZXNzYWdlczonLCBtZXNzYWdlc1Jlc3BvbnNlLnN0YXR1cywgbWVzc2FnZXNSZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdbREVCVUddIEFQSSByZXNwb25zZSBub3QgT0sgLSBTdWJkaXNjdXNzaW9uczonLCBzdWJEaXNjdXNzaW9uc1Jlc3BvbnNlLnN0YXR1cywgc3ViRGlzY3Vzc2lvbnNSZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBkYXRhJyk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IG1lc3NhZ2VzRGF0YSA9IGF3YWl0IG1lc3NhZ2VzUmVzcG9uc2UuanNvbigpO1xuICAgICAgICBjb25zdCBzdWJEaXNjdXNzaW9uc0RhdGEgPSBhd2FpdCBzdWJEaXNjdXNzaW9uc1Jlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgXG4gICAgICAgIGlmICghaXNNb3VudGVkKSByZXR1cm47IC8vIERvbid0IHByb2NlZWQgaWYgY29tcG9uZW50IGlzIHVubW91bnRlZFxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gUmF3IG1lc3NhZ2VzIGRhdGE6JywgbWVzc2FnZXNEYXRhKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNlcGFyYXRlIG1lc3NhZ2VzIGludG8gbWFpbiBkaXNjdXNzaW9uIG1lc3NhZ2VzIGFuZCBzdWItZGlzY3Vzc2lvbiBtZXNzYWdlc1xuICAgICAgICBjb25zdCBtYWluRGlzY3Vzc2lvbk1lc3NhZ2VzOiBNZXNzYWdlW10gPSBbXTtcbiAgICAgICAgY29uc3Qgc3ViRGlzY3Vzc2lvbk1lc3NhZ2VzTWFwID0gbmV3IE1hcDxudW1iZXIsIE1lc3NhZ2VbXT4oKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFByb2Nlc3MgYWxsIG1lc3NhZ2VzXG4gICAgICAgIG1lc3NhZ2VzRGF0YS5mb3JFYWNoKChtOiBhbnkpID0+IHtcbiAgICAgICAgICBjb25zdCBmb3JtYXR0ZWRNZXNzYWdlID0ge1xuICAgICAgICAgICAgaWQ6IG0uaWQsXG4gICAgICAgICAgICBhdXRob3I6IG0uYXV0aG9yLFxuICAgICAgICAgICAgY29udGVudDogbS5jb250ZW50LFxuICAgICAgICAgICAgdGltZXN0YW1wOiBmb3JtYXREYXRlKG5ldyBEYXRlKG0uY3JlYXRlZF9hdCkpLFxuICAgICAgICAgICAgc2VydmVySWQ6IG0uaWQgLy8gU3RvcmUgdGhlIHNlcnZlciBJRCBmb3IgcmVmZXJlbmNlXG4gICAgICAgICAgfTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAobS5zdWJkaXNjdXNzaW9uX2lkKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGlzIGEgc3ViLWRpc2N1c3Npb24gbWVzc2FnZVxuICAgICAgICAgICAgY29uc3Qgc3ViSWQgPSBtLnN1YmRpc2N1c3Npb25faWQ7XG4gICAgICAgICAgICBpZiAoIXN1YkRpc2N1c3Npb25NZXNzYWdlc01hcC5oYXMoc3ViSWQpKSB7XG4gICAgICAgICAgICAgIHN1YkRpc2N1c3Npb25NZXNzYWdlc01hcC5zZXQoc3ViSWQsIFtdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN1YkRpc2N1c3Npb25NZXNzYWdlc01hcC5nZXQoc3ViSWQpPy5wdXNoKGZvcm1hdHRlZE1lc3NhZ2UpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFtERUJVR10gQWRkZWQgbWVzc2FnZSB0byBzdWItZGlzY3Vzc2lvbiAke3N1YklkfTpgLCBmb3JtYXR0ZWRNZXNzYWdlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gVGhpcyBpcyBhIG1haW4gZGlzY3Vzc2lvbiBtZXNzYWdlXG4gICAgICAgICAgICBtYWluRGlzY3Vzc2lvbk1lc3NhZ2VzLnB1c2goZm9ybWF0dGVkTWVzc2FnZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRyYW5zZm9ybSBzdWItZGlzY3Vzc2lvbnMgZGF0YSBhbmQgYXNzb2NpYXRlIG1lc3NhZ2VzXG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZFN1YkRpc2N1c3Npb25zID0gc3ViRGlzY3Vzc2lvbnNEYXRhLm1hcCgoczogYW55KSA9PiB7XG4gICAgICAgICAgY29uc3Qgc3ViTWVzc2FnZXMgPSBzdWJEaXNjdXNzaW9uTWVzc2FnZXNNYXAuZ2V0KHMuaWQpIHx8IFtdO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGBbREVCVUddIFN1Yi1kaXNjdXNzaW9uICR7cy5pZH0gaGFzICR7c3ViTWVzc2FnZXMubGVuZ3RofSBtZXNzYWdlc2ApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aGUgbGFzdCBtZXNzYWdlIHRpbWVzdGFtcFxuICAgICAgICAgIGxldCBsYXN0TWVzc2FnZVRpbWUgPSBzLmNyZWF0ZWRfYXQ7XG4gICAgICAgICAgaWYgKHN1Yk1lc3NhZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIEZpbmQgdGhlIG1vc3QgcmVjZW50IG1lc3NhZ2UgdGltZXN0YW1wIGJ5IGxvb2tpbmcgYXQgYWxsIG1lc3NhZ2VzXG4gICAgICAgICAgICAvLyBUaGlzIGlzIGEgZmFsbGJhY2sgaW4gY2FzZSB0aGUgbWVzc2FnZXMgYXJlbid0IGFscmVhZHkgc29ydGVkXG4gICAgICAgICAgICBsYXN0TWVzc2FnZVRpbWUgPSBzdWJNZXNzYWdlcy5yZWR1Y2UoKGxhdGVzdCwgbXNnKSA9PiB7XG4gICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoaXMgbWVzc2FnZSB0aW1lc3RhbXAgaXMgbW9yZSByZWNlbnRcbiAgICAgICAgICAgICAgY29uc3QgbXNnVGltZSA9IG5ldyBEYXRlKG1zZy50aW1lc3RhbXApLmdldFRpbWUoKTtcbiAgICAgICAgICAgICAgcmV0dXJuIG1zZ1RpbWUgPiBsYXRlc3QgPyBtc2dUaW1lIDogbGF0ZXN0O1xuICAgICAgICAgICAgfSwgbmV3IERhdGUocy5jcmVhdGVkX2F0KS5nZXRUaW1lKCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IHMuaWQsXG4gICAgICAgICAgICB0aXRsZTogcy50aXRsZSxcbiAgICAgICAgICAgIGNyZWF0ZWRBdDogZm9ybWF0RGF0ZShuZXcgRGF0ZShzLmNyZWF0ZWRfYXQpKSxcbiAgICAgICAgICAgIGxhc3RNZXNzYWdlQXQ6IGZvcm1hdERhdGUobmV3IERhdGUobGFzdE1lc3NhZ2VUaW1lKSksXG4gICAgICAgICAgICBtZXNzYWdlczogc3ViTWVzc2FnZXMsXG4gICAgICAgICAgICBwcm9ncmVzczogcy5wcm9ncmVzcyB8fCAwXG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBTZXQgbWFpbiBkaXNjdXNzaW9uIG1lc3NhZ2VzXG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2VzID0gbWFpbkRpc2N1c3Npb25NZXNzYWdlcztcbiAgICAgICAgXG4gICAgICAgIC8vIElmIHdlIGhhdmUgYSBzZWxlY3RlZCBzdWItZGlzY3Vzc2lvbiwgdXBkYXRlIGl0cyBtZXNzYWdlc1xuICAgICAgICBpZiAoc2VsZWN0ZWRTdWJEaXNjdXNzaW9uKSB7XG4gICAgICAgICAgY29uc3QgdXBkYXRlZFN1YkRpc2N1c3Npb24gPSBmb3JtYXR0ZWRTdWJEaXNjdXNzaW9ucy5maW5kKChzZDogU3ViRGlzY3Vzc2lvbikgPT4gc2QuaWQgPT09IHNlbGVjdGVkU3ViRGlzY3Vzc2lvbi5pZCk7XG4gICAgICAgICAgaWYgKHVwZGF0ZWRTdWJEaXNjdXNzaW9uKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgW0RFQlVHXSBVcGRhdGluZyBzZWxlY3RlZCBzdWItZGlzY3Vzc2lvbiAke3NlbGVjdGVkU3ViRGlzY3Vzc2lvbi5pZH0gd2l0aCAke3VwZGF0ZWRTdWJEaXNjdXNzaW9uLm1lc3NhZ2VzLmxlbmd0aH0gbWVzc2FnZXNgKTtcbiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgc2VsZWN0ZWQgc3ViLWRpc2N1c3Npb24gd2l0aCBuZXcgbWVzc2FnZXMgZnJvbSB0aGUgc2VydmVyXG4gICAgICAgICAgICBzZXRTZWxlY3RlZFN1YkRpc2N1c3Npb24odXBkYXRlZFN1YkRpc2N1c3Npb24pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgaWYgYW55IHBlbmRpbmcgbWVzc2FnZXMgaGF2ZSBiZWVuIGNvbmZpcm1lZCBieSB0aGUgc2VydmVyXG4gICAgICAgIGNvbnN0IGNvbmZpcm1lZE1lc3NhZ2VJZHMgPSBmb3JtYXR0ZWRNZXNzYWdlcy5tYXAoKG06IE1lc3NhZ2UpID0+IG0uc2VydmVySWQpO1xuICAgICAgICBjb25zdCBzdGlsbFBlbmRpbmdNZXNzYWdlcyA9IHBlbmRpbmdNZXNzYWdlcy5maWx0ZXIocG0gPT4ge1xuICAgICAgICAgIC8vIEtlZXAgbWVzc2FnZXMgdGhhdCBkb24ndCBoYXZlIGEgc2VydmVyIElEIHlldCBvciB3aG9zZSBJRCBpc24ndCBpbiB0aGUgY29uZmlybWVkIGxpc3RcbiAgICAgICAgICByZXR1cm4gIXBtLnNlcnZlcklkIHx8ICFjb25maXJtZWRNZXNzYWdlSWRzLmluY2x1ZGVzKHBtLnNlcnZlcklkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBDb21iaW5lIHNlcnZlciBtZXNzYWdlcyB3aXRoIGFueSBwZW5kaW5nIG1lc3NhZ2VzIHRoYXQgaGF2ZW4ndCBiZWVuIGNvbmZpcm1lZCB5ZXRcbiAgICAgICAgY29uc3QgY29tYmluZWRNZXNzYWdlcyA9IFsuLi5mb3JtYXR0ZWRNZXNzYWdlcywgLi4uc3RpbGxQZW5kaW5nTWVzc2FnZXNdO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFpc01vdW50ZWQpIHJldHVybjsgLy8gRG9uJ3QgcHJvY2VlZCBpZiBjb21wb25lbnQgaXMgdW5tb3VudGVkXG4gICAgICAgIFxuICAgICAgICBzZXRNZXNzYWdlcyhjb21iaW5lZE1lc3NhZ2VzKTtcbiAgICAgICAgc2V0UGVuZGluZ01lc3NhZ2VzKHN0aWxsUGVuZGluZ01lc3NhZ2VzKTtcbiAgICAgICAgc2V0U3ViRGlzY3Vzc2lvbnMoZm9ybWF0dGVkU3ViRGlzY3Vzc2lvbnMpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignW0RFQlVHXSBFcnJvciBmZXRjaGluZyBkYXRhOicsIGVycm9yKTtcbiAgICAgICAgLy8gT25seSB1c2UgZmFsbGJhY2sgZGF0YSBpZiB3ZSBoYXZlIG5vIG1lc3NhZ2VzIHlldCBhbmQgY29tcG9uZW50IGlzIHN0aWxsIG1vdW50ZWRcbiAgICAgICAgaWYgKGlzTW91bnRlZCAmJiBtZXNzYWdlcy5sZW5ndGggPT09IDAgJiYgcGVuZGluZ01lc3NhZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHNldE1lc3NhZ2VzKFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICAgIGF1dGhvcjogJ0FiaGlzaGVrIFlhZGF2JyxcbiAgICAgICAgICAgICAgY29udGVudDogJ0hpIGV2ZXJ5b25lLCBJIGNyZWF0ZWQgdGhpcyBkaXNjdXNzaW9uIHRvIHRhbGsgYWJvdXQgdGhlIHVwY29taW5nIHByb2plY3QuJyxcbiAgICAgICAgICAgICAgdGltZXN0YW1wOiAnMiBkYXlzIGFnbycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBpZDogMixcbiAgICAgICAgICAgICAgYXV0aG9yOiAnRGFpd2lrIE5lZW1hJyxcbiAgICAgICAgICAgICAgY29udGVudDogJ1RoYW5rcyBmb3Igc2V0dGluZyB0aGlzIHVwISBJIGhhdmUgYSBmZXcgaWRlYXMgSVxcJ2QgbGlrZSB0byBzaGFyZS4nLFxuICAgICAgICAgICAgICB0aW1lc3RhbXA6ICcxIGRheSBhZ28nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgaWQ6IDMsXG4gICAgICAgICAgICAgIGF1dGhvcjogJ1lhbmcgTGl1JyxcbiAgICAgICAgICAgICAgY29udGVudDogJ0lcXCd2ZSBiZWVuIHdvcmtpbmcgb24gc29tZSBkZXNpZ25zIHRoYXQgbWlnaHQgYmUgcmVsZXZhbnQgaGVyZS4nLFxuICAgICAgICAgICAgICB0aW1lc3RhbXA6ICcxMCBob3VycyBhZ28nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdKTtcbiAgICAgICAgICBcbiAgICAgICAgICBzZXRTdWJEaXNjdXNzaW9ucyhbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGlkOiAxLFxuICAgICAgICAgICAgICB0aXRsZTogXCJVSSBJbXBsZW1lbnRhdGlvbiBQbGFuXCIsXG4gICAgICAgICAgICAgIGNyZWF0ZWRBdDogXCIxIGRheSBhZ29cIixcbiAgICAgICAgICAgICAgbGFzdE1lc3NhZ2VBdDogXCIxIGRheSBhZ29cIixcbiAgICAgICAgICAgICAgbWVzc2FnZXM6IFtdLFxuICAgICAgICAgICAgICBwcm9ncmVzczogMzBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKGlzTW91bnRlZCkge1xuICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8vIEluaXRpYWwgZGF0YSBmZXRjaFxuICAgIGZldGNoRGF0YSgpO1xuICAgIFxuICAgIC8vIFNldCB1cCBwb2xsaW5nIHRvIHJlZnJlc2ggZGF0YSBldmVyeSAxMCBzZWNvbmRzLCBidXQgb25seSBmb3IgbmV3IG1lc3NhZ2VzXG4gICAgLy8gbm90IGZvciByZS1yZW5kZXJpbmcgdGhlIGVudGlyZSBjb21wb25lbnRcbiAgICBpZiAocG9sbGluZ0ludGVydmFsUmVmLmN1cnJlbnQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwocG9sbGluZ0ludGVydmFsUmVmLmN1cnJlbnQpO1xuICAgIH1cbiAgICBcbiAgICBwb2xsaW5nSW50ZXJ2YWxSZWYuY3VycmVudCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIC8vIFVzZSB0aGUgc2lsZW50IGZldGNoIG9wdGlvbiB0byBhdm9pZCBzaG93aW5nIGxvYWRpbmcgaW5kaWNhdG9ycyBkdXJpbmcgcG9sbGluZ1xuICAgICAgZmV0Y2hEYXRhKGZhbHNlKTtcbiAgICB9LCAxMDAwMCk7IC8vIEluY3JlYXNlZCB0byAxMCBzZWNvbmRzIHRvIHJlZHVjZSBsb2FkXG4gICAgXG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvbiB0byBwcmV2ZW50IG1lbW9yeSBsZWFrcyBhbmQgc3RhdGUgdXBkYXRlcyBhZnRlciB1bm1vdW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlzTW91bnRlZCA9IGZhbHNlO1xuICAgICAgaWYgKHBvbGxpbmdJbnRlcnZhbFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwocG9sbGluZ0ludGVydmFsUmVmLmN1cnJlbnQpO1xuICAgICAgICBwb2xsaW5nSW50ZXJ2YWxSZWYuY3VycmVudCA9IG51bGw7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZygnW0RFQlVHXSBEaXNjdXNzaW9uTWVzc2FnZXMgY2xlYW51cCAtIGludGVydmFsIGNsZWFyZWQgZm9yIGRpc2N1c3Npb25JZDonLCBkaXNjdXNzaW9uSWQpO1xuICAgIH07XG4gIH0sIFtkaXNjdXNzaW9uSWRdKTsgLy8gT25seSByZS1ydW4gd2hlbiBkaXNjdXNzaW9uSWQgY2hhbmdlc1xuICBcbiAgY29uc3QgW3NlbGVjdGVkU3ViRGlzY3Vzc2lvbiwgc2V0U2VsZWN0ZWRTdWJEaXNjdXNzaW9uXSA9IHVzZVN0YXRlPFN1YkRpc2N1c3Npb24gfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2lzTmV3U3ViRGlzY3Vzc2lvbk9wZW4sIHNldElzTmV3U3ViRGlzY3Vzc2lvbk9wZW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbbmV3U3ViRGlzY3Vzc2lvblRpdGxlLCBzZXROZXdTdWJEaXNjdXNzaW9uVGl0bGVdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtuZXdNZXNzYWdlLCBzZXROZXdNZXNzYWdlXSA9IHVzZVN0YXRlKCcnKTtcbiAgXG4gIGNvbnN0IGhhbmRsZU5ld1N1YkRpc2N1c3Npb24gPSAoKSA9PiB7XG4gICAgc2V0SXNOZXdTdWJEaXNjdXNzaW9uT3Blbih0cnVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDcmVhdGVTdWJEaXNjdXNzaW9uID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmIChuZXdTdWJEaXNjdXNzaW9uVGl0bGUudHJpbSgpKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmxvZygnW0RFQlVHXSBDcmVhdGluZyBzdWItZGlzY3Vzc2lvbiB3aXRoIGRpc2N1c3Npb25JZDonLCBkaXNjdXNzaW9uSWQpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3N1YmRpc2N1c3Npb25zJywge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYXV0aF90b2tlbicpIHx8ICdkZWZhdWx0LXRva2VuJ31gLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgZGlzY3Vzc2lvbklkOiBkaXNjdXNzaW9uSWQsXG4gICAgICAgICAgICB0aXRsZTogbmV3U3ViRGlzY3Vzc2lvblRpdGxlLnRyaW0oKVxuICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHN1Yi1kaXNjdXNzaW9uJyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBuZXdTdWJEaXNjdXNzaW9uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBcbiAgICAgICAgLy8gQWRkIHRoZSBuZXcgc3ViLWRpc2N1c3Npb24gdG8gdGhlIHN0YXRlXG4gICAgICAgIHNldFN1YkRpc2N1c3Npb25zKHByZXYgPT4gWy4uLnByZXYsIHtcbiAgICAgICAgICBpZDogbmV3U3ViRGlzY3Vzc2lvbi5pZCxcbiAgICAgICAgICB0aXRsZTogbmV3U3ViRGlzY3Vzc2lvbi50aXRsZSxcbiAgICAgICAgICBjcmVhdGVkQXQ6ICdqdXN0IG5vdycsXG4gICAgICAgICAgbGFzdE1lc3NhZ2VBdDogJ2p1c3Qgbm93JyxcbiAgICAgICAgICBtZXNzYWdlczogW10sXG4gICAgICAgICAgcHJvZ3Jlc3M6IDBcbiAgICAgICAgfV0pO1xuICAgICAgICBcbiAgICAgICAgc2V0TmV3U3ViRGlzY3Vzc2lvblRpdGxlKCcnKTtcbiAgICAgICAgc2V0SXNOZXdTdWJEaXNjdXNzaW9uT3BlbihmYWxzZSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBzdWItZGlzY3Vzc2lvbjonLCBlcnJvcik7XG4gICAgICAgIFxuICAgICAgICAvLyBGYWxsYmFjayB0byBjbGllbnQtc2lkZSBjcmVhdGlvbiBpZiBBUEkgZmFpbHNcbiAgICAgICAgc2V0U3ViRGlzY3Vzc2lvbnMocHJldiA9PiBbLi4ucHJldiwge1xuICAgICAgICAgIGlkOiBEYXRlLm5vdygpLCAvLyBVc2UgdGltZXN0YW1wIGFzIHRlbXBvcmFyeSBJRFxuICAgICAgICAgIHRpdGxlOiBuZXdTdWJEaXNjdXNzaW9uVGl0bGUudHJpbSgpLFxuICAgICAgICAgIGNyZWF0ZWRBdDogXCJqdXN0IG5vd1wiLFxuICAgICAgICAgIGxhc3RNZXNzYWdlQXQ6IFwianVzdCBub3dcIixcbiAgICAgICAgICBtZXNzYWdlczogW10sXG4gICAgICAgICAgcHJvZ3Jlc3M6IDBcbiAgICAgICAgfV0pO1xuICAgICAgICBcbiAgICAgICAgc2V0TmV3U3ViRGlzY3Vzc2lvblRpdGxlKCcnKTtcbiAgICAgICAgc2V0SXNOZXdTdWJEaXNjdXNzaW9uT3BlbihmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVNlbmRNZXNzYWdlID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAobmV3TWVzc2FnZS50cmltKCkpIHtcbiAgICAgIC8vIENyZWF0ZSBhIHRlbXBvcmFyeSBJRCBmb3IgdGhlIHBlbmRpbmcgbWVzc2FnZVxuICAgICAgY29uc3QgdGVtcElkID0gYHRlbXAtJHtEYXRlLm5vdygpfWA7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBhIHBlbmRpbmcgbWVzc2FnZSB0byBzaG93IGltbWVkaWF0ZWx5XG4gICAgICBjb25zdCBwZW5kaW5nTWVzc2FnZSA9IHtcbiAgICAgICAgaWQ6IHRlbXBJZCxcbiAgICAgICAgYXV0aG9yOiB1c2VyPy5mdWxsX25hbWUgfHwgJ1lvdScsXG4gICAgICAgIGNvbnRlbnQ6IG5ld01lc3NhZ2UudHJpbSgpLFxuICAgICAgICB0aW1lc3RhbXA6ICdqdXN0IG5vdycsXG4gICAgICAgIGlzUGVuZGluZzogdHJ1ZVxuICAgICAgfTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gQ3JlYXRpbmcgcGVuZGluZyBtZXNzYWdlOicsIHBlbmRpbmdNZXNzYWdlKTtcbiAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIFNlbGVjdGVkIHN1Yi1kaXNjdXNzaW9uOicsIHNlbGVjdGVkU3ViRGlzY3Vzc2lvbiA/IHNlbGVjdGVkU3ViRGlzY3Vzc2lvbi5pZCA6ICdub25lJyk7XG4gICAgICBcbiAgICAgIC8vIEFkZCB0aGUgcGVuZGluZyBtZXNzYWdlIHRvIHRoZSBVSSBpbW1lZGlhdGVseVxuICAgICAgaWYgKHNlbGVjdGVkU3ViRGlzY3Vzc2lvbikge1xuICAgICAgICAvLyBVcGRhdGUgdGhlIHNlbGVjdGVkIHN1Yi1kaXNjdXNzaW9uIHdpdGggdGhlIG5ldyBtZXNzYWdlXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRTdWJEaXNjdXNzaW9uID0ge1xuICAgICAgICAgIC4uLnNlbGVjdGVkU3ViRGlzY3Vzc2lvbixcbiAgICAgICAgICBtZXNzYWdlczogWy4uLnNlbGVjdGVkU3ViRGlzY3Vzc2lvbi5tZXNzYWdlcywgcGVuZGluZ01lc3NhZ2VdXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgdGhlIHN1Yi1kaXNjdXNzaW9uIGluIHRoZSBzdGF0ZVxuICAgICAgICBzZXRTdWJEaXNjdXNzaW9ucyhwcmV2ID0+IHByZXYubWFwKHN1YiA9PiBcbiAgICAgICAgICBzdWIuaWQgPT09IHNlbGVjdGVkU3ViRGlzY3Vzc2lvbi5pZCA/IHVwZGF0ZWRTdWJEaXNjdXNzaW9uIDogc3ViXG4gICAgICAgICkpO1xuICAgICAgICBcbiAgICAgICAgLy8gQWxzbyB1cGRhdGUgdGhlIHNlbGVjdGVkU3ViRGlzY3Vzc2lvbiBzdGF0ZSB0byBzaG93IHRoZSBtZXNzYWdlIGltbWVkaWF0ZWx5XG4gICAgICAgIHNldFNlbGVjdGVkU3ViRGlzY3Vzc2lvbih1cGRhdGVkU3ViRGlzY3Vzc2lvbik7XG4gICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIEFkZGVkIG1lc3NhZ2UgdG8gc3ViLWRpc2N1c3Npb24gVUk6JywgdXBkYXRlZFN1YkRpc2N1c3Npb24ubWVzc2FnZXMubGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEFkZCB0byBib3RoIG1lc3NhZ2VzIGFuZCBwZW5kaW5nTWVzc2FnZXMgZm9yIG1haW4gZGlzY3Vzc2lvblxuICAgICAgICBzZXRNZXNzYWdlcyhwcmV2ID0+IFsuLi5wcmV2LCBwZW5kaW5nTWVzc2FnZV0pO1xuICAgICAgICBzZXRQZW5kaW5nTWVzc2FnZXMocHJldiA9PiBbLi4ucHJldiwgcGVuZGluZ01lc3NhZ2VdKTtcbiAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gQWRkZWQgbWVzc2FnZSB0byBtYWluIGRpc2N1c3Npb24gVUknKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2xlYXIgdGhlIGlucHV0IGZpZWxkIGltbWVkaWF0ZWx5XG4gICAgICBzZXROZXdNZXNzYWdlKCcnKTtcbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gU2VuZCB0aGUgbWVzc2FnZSB0byB0aGUgc2VydmVyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvbWVzc2FnZXMnLCB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdhdXRoX3Rva2VuJykgfHwgJ2RlZmF1bHQtdG9rZW4nfWAsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBkaXNjdXNzaW9uX2lkOiBkaXNjdXNzaW9uSWQsXG4gICAgICAgICAgICBzdWJkaXNjdXNzaW9uX2lkOiBzZWxlY3RlZFN1YkRpc2N1c3Npb24/LmlkIHx8IG51bGwsXG4gICAgICAgICAgICBjb250ZW50OiBwZW5kaW5nTWVzc2FnZS5jb250ZW50LFxuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXI/LmZ1bGxfbmFtZSB8fCAnQW5vbnltb3VzJ1xuICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gc2VuZCBtZXNzYWdlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBuZXdNZXNzYWdlRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIE1lc3NhZ2Ugc2F2ZWQgdG8gc2VydmVyIHdpdGggSUQ6JywgbmV3TWVzc2FnZURhdGEuaWQpO1xuICAgICAgICBcbiAgICAgICAgLy8gVXBkYXRlIHRoZSBwZW5kaW5nIG1lc3NhZ2Ugd2l0aCB0aGUgc2VydmVyIElEXG4gICAgICAgIGlmIChzZWxlY3RlZFN1YkRpc2N1c3Npb24pIHtcbiAgICAgICAgICAvLyBDcmVhdGUgdXBkYXRlZCBtZXNzYWdlcyBhcnJheSB3aXRoIHRoZSBzZXJ2ZXIgSURcbiAgICAgICAgICBjb25zdCB1cGRhdGVkTWVzc2FnZXMgPSBzZWxlY3RlZFN1YkRpc2N1c3Npb24ubWVzc2FnZXMubWFwKG1zZyA9PiBcbiAgICAgICAgICAgIG1zZy5pZC50b1N0cmluZygpID09PSB0ZW1wSWRcbiAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAuLi5tc2csXG4gICAgICAgICAgICAgICAgICBpZDogbmV3TWVzc2FnZURhdGEuaWQsXG4gICAgICAgICAgICAgICAgICBzZXJ2ZXJJZDogbmV3TWVzc2FnZURhdGEuaWQsXG4gICAgICAgICAgICAgICAgICBpc1BlbmRpbmc6IGZhbHNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA6IG1zZ1xuICAgICAgICAgICk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQ3JlYXRlIHVwZGF0ZWQgc3ViLWRpc2N1c3Npb24gb2JqZWN0XG4gICAgICAgICAgY29uc3QgdXBkYXRlZFN1YkRpc2N1c3Npb24gPSB7XG4gICAgICAgICAgICAuLi5zZWxlY3RlZFN1YkRpc2N1c3Npb24sXG4gICAgICAgICAgICBtZXNzYWdlczogdXBkYXRlZE1lc3NhZ2VzXG4gICAgICAgICAgfTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBVcGRhdGUgdGhlIHN1Yi1kaXNjdXNzaW9uIGluIHRoZSBzdGF0ZVxuICAgICAgICAgIHNldFN1YkRpc2N1c3Npb25zKHByZXYgPT4gcHJldi5tYXAoc3ViID0+IFxuICAgICAgICAgICAgc3ViLmlkID09PSBzZWxlY3RlZFN1YkRpc2N1c3Npb24uaWQgPyB1cGRhdGVkU3ViRGlzY3Vzc2lvbiA6IHN1YlxuICAgICAgICAgICkpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEFsc28gdXBkYXRlIHRoZSBzZWxlY3RlZFN1YkRpc2N1c3Npb24gc3RhdGUgdG8gc2hvdyB0aGUgY29uZmlybWVkIG1lc3NhZ2VcbiAgICAgICAgICBzZXRTZWxlY3RlZFN1YkRpc2N1c3Npb24odXBkYXRlZFN1YkRpc2N1c3Npb24pO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIFVwZGF0ZWQgc3ViLWRpc2N1c3Npb24gbWVzc2FnZXMgd2l0aCBzZXJ2ZXIgSUQ6JywgdXBkYXRlZE1lc3NhZ2VzLmxlbmd0aCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gVXBkYXRlIG1haW4gZGlzY3Vzc2lvbiBtZXNzYWdlc1xuICAgICAgICAgIHNldE1lc3NhZ2VzKHByZXYgPT4gcHJldi5tYXAobXNnID0+IFxuICAgICAgICAgICAgbXNnLmlkLnRvU3RyaW5nKCkgPT09IHRlbXBJZFxuICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgIC4uLm1zZyxcbiAgICAgICAgICAgICAgICAgIGlkOiBuZXdNZXNzYWdlRGF0YS5pZCxcbiAgICAgICAgICAgICAgICAgIHNlcnZlcklkOiBuZXdNZXNzYWdlRGF0YS5pZCxcbiAgICAgICAgICAgICAgICAgIGlzUGVuZGluZzogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIDogbXNnXG4gICAgICAgICAgKSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gVXBkYXRlIHRoZSBwZW5kaW5nIG1lc3NhZ2UgaW4gdGhlIHBlbmRpbmdNZXNzYWdlcyBhcnJheVxuICAgICAgICAgIHNldFBlbmRpbmdNZXNzYWdlcyhwcmV2ID0+IHByZXYubWFwKG1zZyA9PiBcbiAgICAgICAgICAgIG1zZy5pZC50b1N0cmluZygpID09PSB0ZW1wSWRcbiAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAuLi5tc2csXG4gICAgICAgICAgICAgICAgICBpZDogbmV3TWVzc2FnZURhdGEuaWQsXG4gICAgICAgICAgICAgICAgICBzZXJ2ZXJJZDogbmV3TWVzc2FnZURhdGEuaWQsXG4gICAgICAgICAgICAgICAgICBpc1BlbmRpbmc6IGZhbHNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA6IG1zZ1xuICAgICAgICAgICkpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIFVwZGF0ZWQgbWFpbiBkaXNjdXNzaW9uIG1lc3NhZ2VzIHdpdGggc2VydmVyIElEJyk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlbmRpbmcgbWVzc2FnZTonLCBlcnJvcik7XG4gICAgICAgIC8vIFRoZSBtZXNzYWdlIGlzIGFscmVhZHkgaW4gdGhlIFVJLCBzbyB3ZSBkb24ndCBuZWVkIHRvIGFkZCBpdCBhZ2FpblxuICAgICAgICAvLyBKdXN0IG1hcmsgaXQgYXMgZmFpbGVkIHNvIHRoZSB1c2VyIGtub3dzIGl0IGRpZG4ndCBzZW5kXG4gICAgICAgIGlmIChzZWxlY3RlZFN1YkRpc2N1c3Npb24pIHtcbiAgICAgICAgICBzZXRTdWJEaXNjdXNzaW9ucyhwcmV2ID0+IHByZXYubWFwKHN1YiA9PiBcbiAgICAgICAgICAgIHN1Yi5pZCA9PT0gc2VsZWN0ZWRTdWJEaXNjdXNzaW9uLmlkXG4gICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgLi4uc3ViLFxuICAgICAgICAgICAgICAgICAgbWVzc2FnZXM6IHN1Yi5tZXNzYWdlcy5tYXAobXNnID0+IFxuICAgICAgICAgICAgICAgICAgICBtc2cuaWQudG9TdHJpbmcoKSA9PT0gdGVtcElkXG4gICAgICAgICAgICAgICAgICAgICAgPyB7IC4uLm1zZywgZmFpbGVkOiB0cnVlIH1cbiAgICAgICAgICAgICAgICAgICAgICA6IG1zZ1xuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgOiBzdWJcbiAgICAgICAgICApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRNZXNzYWdlcyhwcmV2ID0+IHByZXYubWFwKG1zZyA9PiBcbiAgICAgICAgICAgIG1zZy5pZC50b1N0cmluZygpID09PSB0ZW1wSWRcbiAgICAgICAgICAgICAgPyB7IC4uLm1zZywgZmFpbGVkOiB0cnVlIH1cbiAgICAgICAgICAgICAgOiBtc2dcbiAgICAgICAgICApKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicC02XCI+XG4gICAgICB7aXNMb2FkaW5nICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBweS04XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltYXRlLXNwaW4gcm91bmRlZC1mdWxsIGgtOCB3LTggYm9yZGVyLWItMiBib3JkZXItaW5kaWdvLTYwMFwiPjwvZGl2PlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1sLTIgdGV4dC1ncmF5LTYwMFwiPkxvYWRpbmcgbWVzc2FnZXMuLi48L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTZcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgICAgIDxCdXR0b24gXG4gICAgICAgICAgICBvbkNsaWNrPXtzZWxlY3RlZFN1YkRpc2N1c3Npb24gPyAoKSA9PiBzZXRTZWxlY3RlZFN1YkRpc2N1c3Npb24obnVsbCkgOiBvbkJhY2t9XG4gICAgICAgICAgICB2YXJpYW50PVwib3V0bGluZVwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwIGhvdmVyOnRleHQtZ3JheS05MDBcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIOKGkCBCYWNrXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTkwMFwiPlxuICAgICAgICAgICAgICB7c2VsZWN0ZWRTdWJEaXNjdXNzaW9uID8gc2VsZWN0ZWRTdWJEaXNjdXNzaW9uLnRpdGxlIDogZGlzY3Vzc2lvblRpdGxlfVxuICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgIHtzZWxlY3RlZFN1YkRpc2N1c3Npb24gJiYgc2VsZWN0ZWRTdWJEaXNjdXNzaW9uLnByb2dyZXNzICE9PSB1bmRlZmluZWQgJiYgKFxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj5cbiAgICAgICAgICAgICAgICBQcm9ncmVzczoge3NlbGVjdGVkU3ViRGlzY3Vzc2lvbi5wcm9ncmVzc30lXG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgICAgICB7IXNlbGVjdGVkU3ViRGlzY3Vzc2lvbiAmJiAoXG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU5ld1N1YkRpc2N1c3Npb259XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLWJsdWUtNjAwIGhvdmVyOmJnLWJsdWUtNzAwIHRleHQtd2hpdGVcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICArIE5ldyBTdWItZGlzY3Vzc2lvblxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgeyFzZWxlY3RlZFN1YkRpc2N1c3Npb24gJiYgc3ViRGlzY3Vzc2lvbnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWItNlwiPlxuICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDAgbWItM1wiPlN1Yi1kaXNjdXNzaW9uczwvaDM+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cbiAgICAgICAgICAgIHtzdWJEaXNjdXNzaW9ucy5tYXAoKHN1YikgPT4gKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAga2V5PXtzdWIuaWR9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2VsZWN0ZWRTdWJEaXNjdXNzaW9uKHN1Yil9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0zIGJvcmRlciByb3VuZGVkLW1kIGhvdmVyOmJnLWJsdWUtNTAgY3Vyc29yLXBvaW50ZXIgdHJhbnNpdGlvbi1jb2xvcnNcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDBcIj57c3ViLnRpdGxlfTwvaDQ+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgICAgICB7c3ViLm1lc3NhZ2VzLmxlbmd0aH0gbWVzc2FnZXMg4oCiIExhc3QgbWVzc2FnZSB7c3ViLmxhc3RNZXNzYWdlQXR9XG4gICAgICAgICAgICAgICAgICB7c3ViLnByb2dyZXNzICE9PSB1bmRlZmluZWQgJiYgYCDigKIgUHJvZ3Jlc3M6ICR7c3ViLnByb2dyZXNzfSVgfVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNCBtYi02IG1heC1oLVs2MDBweF0gb3ZlcmZsb3cteS1hdXRvXCI+XG4gICAgICAgIHsoc2VsZWN0ZWRTdWJEaXNjdXNzaW9uID8gc2VsZWN0ZWRTdWJEaXNjdXNzaW9uLm1lc3NhZ2VzIDogbWVzc2FnZXMpLm1hcCgobWVzc2FnZSkgPT4gKFxuICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICBrZXk9e21lc3NhZ2UuaWR9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2BmbGV4ICR7XG4gICAgICAgICAgICAgIG1lc3NhZ2UuYXV0aG9yID09PSB1c2VyPy5mdWxsX25hbWUgPyAnanVzdGlmeS1lbmQnIDogJ2p1c3RpZnktc3RhcnQnXG4gICAgICAgICAgICB9YH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17YG1heC13LXhzIHNtOm1heC13LW1kIG1kOm1heC13LWxnIHJvdW5kZWQtbGcgcC0zICR7XG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hdXRob3IgPT09IHVzZXI/LmZ1bGxfbmFtZVxuICAgICAgICAgICAgICAgICAgPyAnYmctYmx1ZS01MDAgdGV4dC13aGl0ZSByb3VuZGVkLWJyLW5vbmUnXG4gICAgICAgICAgICAgICAgICA6ICdiZy1ncmF5LTEwMCB0ZXh0LWdyYXktOTAwIHJvdW5kZWQtYmwtbm9uZSdcbiAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHttZXNzYWdlLmF1dGhvciAhPT0gdXNlcj8uZnVsbF9uYW1lICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCBtYi0xXCI+XG4gICAgICAgICAgICAgICAgICB7bWVzc2FnZS5hdXRob3J9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbVwiPnttZXNzYWdlLmNvbnRlbnR9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgdGV4dC14cyBtdC0xICR7XG4gICAgICAgICAgICAgICAgbWVzc2FnZS5hdXRob3IgPT09IHVzZXI/LmZ1bGxfbmFtZSA/ICd0ZXh0LWJsdWUtMTAwJyA6ICd0ZXh0LWdyYXktNTAwJ1xuICAgICAgICAgICAgICB9YH0+XG4gICAgICAgICAgICAgICAge21lc3NhZ2UudGltZXN0YW1wfVxuICAgICAgICAgICAgICAgIHttZXNzYWdlLmlzUGVuZGluZyAmJiAnIOKAoiBTZW5kaW5nLi4uJ31cbiAgICAgICAgICAgICAgICB7bWVzc2FnZS5mYWlsZWQgJiYgJyDigKIgRmFpbGVkIHRvIHNlbmQnfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlU2VuZE1lc3NhZ2V9IGNsYXNzTmFtZT1cInAtNCBib3JkZXItdFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UteC0yXCI+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZT17bmV3TWVzc2FnZX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0TmV3TWVzc2FnZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlR5cGUgeW91ciBtZXNzYWdlLi4uXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXgtMSByb3VuZGVkLWZ1bGwgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBweC00IHB5LTIgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLWluZGlnby01MDBcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1pbmRpZ28tNjAwIHRleHQtd2hpdGUgcHgtNCBweS0yIHJvdW5kZWQtZnVsbCBob3ZlcjpiZy1pbmRpZ28tNzAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1pbmRpZ28tNTAwIGZvY3VzOnJpbmctb2Zmc2V0LTJcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIFNlbmRcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIDxEaWFsb2cgb3Blbj17aXNOZXdTdWJEaXNjdXNzaW9uT3Blbn0gb25PcGVuQ2hhbmdlPXtzZXRJc05ld1N1YkRpc2N1c3Npb25PcGVufT5cbiAgICAgICAgPERpYWxvZ0hlYWRlcj5cbiAgICAgICAgICA8RGlhbG9nVGl0bGU+Q3JlYXRlIE5ldyBTdWItZGlzY3Vzc2lvbjwvRGlhbG9nVGl0bGU+XG4gICAgICAgIDwvRGlhbG9nSGVhZGVyPlxuICAgICAgICA8RGlhbG9nQ29udGVudD5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNCBweS00XCI+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTFcIj5cbiAgICAgICAgICAgICAgICBTdWItZGlzY3Vzc2lvbiBUaXRsZVxuICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICB2YWx1ZT17bmV3U3ViRGlzY3Vzc2lvblRpdGxlfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0TmV3U3ViRGlzY3Vzc2lvblRpdGxlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHN1Yi1kaXNjdXNzaW9uIHRpdGxlLi4uXCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGxcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvRGlhbG9nQ29udGVudD5cbiAgICAgICAgPERpYWxvZ0Zvb3Rlcj5cbiAgICAgICAgICA8QnV0dG9uIFxuICAgICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiIFxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0SXNOZXdTdWJEaXNjdXNzaW9uT3BlbihmYWxzZSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQ3JlYXRlU3ViRGlzY3Vzc2lvbn1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLWJsdWUtNjAwIGhvdmVyOmJnLWJsdWUtNzAwIHRleHQtd2hpdGVcIlxuICAgICAgICAgICAgZGlzYWJsZWQ9eyFuZXdTdWJEaXNjdXNzaW9uVGl0bGUudHJpbSgpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIENyZWF0ZSBTdWItZGlzY3Vzc2lvblxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L0RpYWxvZ0Zvb3Rlcj5cbiAgICAgIDwvRGlhbG9nPlxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJCdXR0b24iLCJJbnB1dCIsIkRpYWxvZyIsIkRpYWxvZ0hlYWRlciIsIkRpYWxvZ1RpdGxlIiwiRGlhbG9nQ29udGVudCIsIkRpYWxvZ0Zvb3RlciIsInVzZUF1dGgiLCJEaXNjdXNzaW9uTWVzc2FnZXMiLCJkaXNjdXNzaW9uSWQiLCJkaXNjdXNzaW9uVGl0bGUiLCJvbkJhY2siLCJjb25zb2xlIiwibG9nIiwidXNlciIsIm1lc3NhZ2VzIiwic2V0TWVzc2FnZXMiLCJzdWJEaXNjdXNzaW9ucyIsInNldFN1YkRpc2N1c3Npb25zIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJub3ciLCJEYXRlIiwiZGlmZkluU2Vjb25kcyIsIk1hdGgiLCJmbG9vciIsImdldFRpbWUiLCJtaW51dGVzIiwiaG91cnMiLCJkYXlzIiwicGVuZGluZ01lc3NhZ2VzIiwic2V0UGVuZGluZ01lc3NhZ2VzIiwicG9sbGluZ0ludGVydmFsUmVmIiwiaXNNb3VudGVkIiwiZmV0Y2hEYXRhIiwic2hvd0xvYWRpbmciLCJsZW5ndGgiLCJtZXNzYWdlc1Jlc3BvbnNlIiwiZmV0Y2giLCJzdGF0dXMiLCJzdWJEaXNjdXNzaW9uc1Jlc3BvbnNlIiwib2siLCJlcnJvciIsInN0YXR1c1RleHQiLCJFcnJvciIsIm1lc3NhZ2VzRGF0YSIsImpzb24iLCJzdWJEaXNjdXNzaW9uc0RhdGEiLCJtYWluRGlzY3Vzc2lvbk1lc3NhZ2VzIiwic3ViRGlzY3Vzc2lvbk1lc3NhZ2VzTWFwIiwiTWFwIiwiZm9yRWFjaCIsIm0iLCJmb3JtYXR0ZWRNZXNzYWdlIiwiaWQiLCJhdXRob3IiLCJjb250ZW50IiwidGltZXN0YW1wIiwiY3JlYXRlZF9hdCIsInNlcnZlcklkIiwic3ViZGlzY3Vzc2lvbl9pZCIsInN1YklkIiwiaGFzIiwic2V0IiwiZ2V0IiwicHVzaCIsImZvcm1hdHRlZFN1YkRpc2N1c3Npb25zIiwibWFwIiwicyIsInN1Yk1lc3NhZ2VzIiwibGFzdE1lc3NhZ2VUaW1lIiwicmVkdWNlIiwibGF0ZXN0IiwibXNnIiwibXNnVGltZSIsInRpdGxlIiwiY3JlYXRlZEF0IiwibGFzdE1lc3NhZ2VBdCIsInByb2dyZXNzIiwiZm9ybWF0dGVkTWVzc2FnZXMiLCJzZWxlY3RlZFN1YkRpc2N1c3Npb24iLCJ1cGRhdGVkU3ViRGlzY3Vzc2lvbiIsImZpbmQiLCJzZCIsInNldFNlbGVjdGVkU3ViRGlzY3Vzc2lvbiIsImNvbmZpcm1lZE1lc3NhZ2VJZHMiLCJzdGlsbFBlbmRpbmdNZXNzYWdlcyIsImZpbHRlciIsInBtIiwiaW5jbHVkZXMiLCJjb21iaW5lZE1lc3NhZ2VzIiwiY3VycmVudCIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImlzTmV3U3ViRGlzY3Vzc2lvbk9wZW4iLCJzZXRJc05ld1N1YkRpc2N1c3Npb25PcGVuIiwibmV3U3ViRGlzY3Vzc2lvblRpdGxlIiwic2V0TmV3U3ViRGlzY3Vzc2lvblRpdGxlIiwibmV3TWVzc2FnZSIsInNldE5ld01lc3NhZ2UiLCJoYW5kbGVOZXdTdWJEaXNjdXNzaW9uIiwiaGFuZGxlQ3JlYXRlU3ViRGlzY3Vzc2lvbiIsInRyaW0iLCJyZXNwb25zZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuZXdTdWJEaXNjdXNzaW9uIiwicHJldiIsImhhbmRsZVNlbmRNZXNzYWdlIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGVtcElkIiwicGVuZGluZ01lc3NhZ2UiLCJmdWxsX25hbWUiLCJpc1BlbmRpbmciLCJzdWIiLCJkaXNjdXNzaW9uX2lkIiwidXNlcm5hbWUiLCJuZXdNZXNzYWdlRGF0YSIsInVwZGF0ZWRNZXNzYWdlcyIsInRvU3RyaW5nIiwiZmFpbGVkIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiIsIm9uQ2xpY2siLCJ2YXJpYW50IiwiaDIiLCJ1bmRlZmluZWQiLCJwIiwiaDMiLCJoNCIsIm1lc3NhZ2UiLCJmb3JtIiwib25TdWJtaXQiLCJpbnB1dCIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwidGFyZ2V0IiwicGxhY2Vob2xkZXIiLCJidXR0b24iLCJvcGVuIiwib25PcGVuQ2hhbmdlIiwibGFiZWwiLCJkaXNhYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/DiscussionMessages.tsx\n"));

/***/ })

});