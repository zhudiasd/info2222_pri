"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/DiscussionMessages.tsx":
/*!***********************************************!*\
  !*** ./src/components/DiscussionMessages.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DiscussionMessages; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui/button */ \"(app-pages-browser)/./src/components/ui/button.tsx\");\n/* harmony import */ var _ui_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/input */ \"(app-pages-browser)/./src/components/ui/input.tsx\");\n/* harmony import */ var _ui_popup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui/popup */ \"(app-pages-browser)/./src/components/ui/popup.tsx\");\n/* harmony import */ var _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/contexts/AuthContext */ \"(app-pages-browser)/./src/contexts/AuthContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction DiscussionMessages(param) {\n    let { discussionId, discussionTitle, onBack, onMessageSent } = param;\n    _s();\n    console.log(\"[DEBUG] DiscussionMessages component initialized with discussionId:\", discussionId);\n    const { user } = (0,_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__.useAuth)();\n    console.log(\"[DEBUG] User from AuthContext in DiscussionMessages:\", user);\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [subDiscussions, setSubDiscussions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Helper function to format dates\n    const formatDate = (date)=>{\n        const now = new Date();\n        const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n        if (diffInSeconds < 60) {\n            return \"just now\";\n        } else if (diffInSeconds < 3600) {\n            const minutes = Math.floor(diffInSeconds / 60);\n            return \"\".concat(minutes, \" \").concat(minutes === 1 ? \"minute\" : \"minutes\", \" ago\");\n        } else if (diffInSeconds < 86400) {\n            const hours = Math.floor(diffInSeconds / 3600);\n            return \"\".concat(hours, \" \").concat(hours === 1 ? \"hour\" : \"hours\", \" ago\");\n        } else {\n            const days = Math.floor(diffInSeconds / 86400);\n            return \"\".concat(days, \" \").concat(days === 1 ? \"day\" : \"days\", \" ago\");\n        }\n    };\n    // Track locally added messages that haven't been confirmed from the server yet\n    const [pendingMessages, setPendingMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Use a ref to store the polling interval ID\n    const pollingIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Fetch messages and sub-discussions from the server\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"[DEBUG] DiscussionMessages useEffect running for discussionId:\", discussionId);\n        let isMounted = true; // Track if component is mounted\n        // Function to fetch data without setting up polling\n        const fetchData = async function() {\n            let showLoading = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n            console.log(\"[DEBUG] DiscussionMessages fetchData function called\");\n            if (!isMounted) return; // Don't proceed if component is unmounted\n            if (pendingMessages.length > 0 || !showLoading) {\n                // Don't show loading indicator when we have pending messages\n                // or when explicitly requested not to\n                setIsLoading(false);\n            } else {\n                setIsLoading(true);\n            }\n            try {\n                console.log(\"[DEBUG] Fetching messages and subdiscussions from API\");\n                // Fetch messages for the current discussion\n                const messagesResponse = await fetch(\"/api/messages?discussionId=\".concat(discussionId));\n                console.log(\"[DEBUG] Messages API response status:\", messagesResponse.status);\n                const subDiscussionsResponse = await fetch(\"/api/subdiscussions?discussionId=\".concat(discussionId));\n                console.log(\"[DEBUG] Subdiscussions API response status:\", subDiscussionsResponse.status);\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                if (!messagesResponse.ok || !subDiscussionsResponse.ok) {\n                    console.error(\"[DEBUG] API response not OK - Messages:\", messagesResponse.status, messagesResponse.statusText);\n                    console.error(\"[DEBUG] API response not OK - Subdiscussions:\", subDiscussionsResponse.status, subDiscussionsResponse.statusText);\n                    throw new Error(\"Failed to fetch data\");\n                }\n                const messagesData = await messagesResponse.json();\n                const subDiscussionsData = await subDiscussionsResponse.json();\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                console.log(\"[DEBUG] Raw messages data:\", messagesData);\n                // Separate messages into main discussion messages and sub-discussion messages\n                const mainDiscussionMessages = [];\n                const subDiscussionMessagesMap = new Map();\n                // Process all messages\n                messagesData.forEach((m)=>{\n                    const formattedMessage = {\n                        id: m.id,\n                        author: m.author,\n                        content: m.content,\n                        timestamp: formatDate(new Date(m.created_at)),\n                        serverId: m.id // Store the server ID for reference\n                    };\n                    if (m.subdiscussion_id) {\n                        var _subDiscussionMessagesMap_get;\n                        // This is a sub-discussion message\n                        const subId = m.subdiscussion_id;\n                        if (!subDiscussionMessagesMap.has(subId)) {\n                            subDiscussionMessagesMap.set(subId, []);\n                        }\n                        (_subDiscussionMessagesMap_get = subDiscussionMessagesMap.get(subId)) === null || _subDiscussionMessagesMap_get === void 0 ? void 0 : _subDiscussionMessagesMap_get.push(formattedMessage);\n                        console.log(\"[DEBUG] Added message to sub-discussion \".concat(subId, \":\"), formattedMessage);\n                    } else {\n                        // This is a main discussion message\n                        mainDiscussionMessages.push(formattedMessage);\n                    }\n                });\n                // Transform sub-discussions data and associate messages\n                const formattedSubDiscussions = subDiscussionsData.map((s)=>{\n                    const subMessages = subDiscussionMessagesMap.get(s.id) || [];\n                    console.log(\"[DEBUG] Sub-discussion \".concat(s.id, \" has \").concat(subMessages.length, \" messages\"));\n                    // Calculate the last message timestamp\n                    let lastMessageTime = s.created_at;\n                    if (subMessages.length > 0) {\n                        // Find the most recent message timestamp by looking at all messages\n                        // This is a fallback in case the messages aren't already sorted\n                        lastMessageTime = subMessages.reduce((latest, msg)=>{\n                            // Check if this message timestamp is more recent\n                            const msgTime = new Date(msg.timestamp).getTime();\n                            return msgTime > latest ? msgTime : latest;\n                        }, new Date(s.created_at).getTime());\n                    }\n                    return {\n                        id: s.id,\n                        title: s.title,\n                        createdAt: formatDate(new Date(s.created_at)),\n                        lastMessageAt: formatDate(new Date(lastMessageTime)),\n                        messages: subMessages,\n                        progress: s.progress || 0\n                    };\n                });\n                // Set main discussion messages\n                const formattedMessages = mainDiscussionMessages;\n                // If we have a selected sub-discussion, update its messages\n                if (selectedSubDiscussion) {\n                    const updatedSubDiscussion = formattedSubDiscussions.find((sd)=>sd.id === selectedSubDiscussion.id);\n                    if (updatedSubDiscussion) {\n                        console.log(\"[DEBUG] Updating selected sub-discussion \".concat(selectedSubDiscussion.id, \" with \").concat(updatedSubDiscussion.messages.length, \" messages\"));\n                        // Update the selected sub-discussion with new messages from the server\n                        setSelectedSubDiscussion(updatedSubDiscussion);\n                    }\n                }\n                // Check if any pending messages have been confirmed by the server\n                const confirmedMessageIds = formattedMessages.map((m)=>m.serverId);\n                const stillPendingMessages = pendingMessages.filter((pm)=>{\n                    // Keep messages that don't have a server ID yet or whose ID isn't in the confirmed list\n                    return !pm.serverId || !confirmedMessageIds.includes(pm.serverId);\n                });\n                // Combine server messages with any pending messages that haven't been confirmed yet\n                const combinedMessages = [\n                    ...formattedMessages,\n                    ...stillPendingMessages\n                ];\n                if (!isMounted) return; // Don't proceed if component is unmounted\n                setMessages(combinedMessages);\n                setPendingMessages(stillPendingMessages);\n                setSubDiscussions(formattedSubDiscussions);\n            } catch (error) {\n                console.error(\"[DEBUG] Error fetching data:\", error);\n                // Only use fallback data if we have no messages yet and component is still mounted\n                if (isMounted && messages.length === 0 && pendingMessages.length === 0) {\n                    setMessages([\n                        {\n                            id: 1,\n                            author: \"Abhishek Yadav\",\n                            content: \"Hi everyone, I created this discussion to talk about the upcoming project.\",\n                            timestamp: \"2 days ago\"\n                        },\n                        {\n                            id: 2,\n                            author: \"Daiwik Neema\",\n                            content: \"Thanks for setting this up! I have a few ideas I'd like to share.\",\n                            timestamp: \"1 day ago\"\n                        },\n                        {\n                            id: 3,\n                            author: \"Yang Liu\",\n                            content: \"I've been working on some designs that might be relevant here.\",\n                            timestamp: \"10 hours ago\"\n                        }\n                    ]);\n                    setSubDiscussions([\n                        {\n                            id: 1,\n                            title: \"UI Implementation Plan\",\n                            createdAt: \"1 day ago\",\n                            lastMessageAt: \"1 day ago\",\n                            messages: [],\n                            progress: 30\n                        }\n                    ]);\n                }\n            } finally{\n                if (isMounted) {\n                    setIsLoading(false);\n                }\n            }\n        };\n        // Initial data fetch\n        fetchData();\n        // Set up polling to refresh data every 10 seconds, but only for new messages\n        // not for re-rendering the entire component\n        if (pollingIntervalRef.current) {\n            clearInterval(pollingIntervalRef.current);\n        }\n        pollingIntervalRef.current = setInterval(()=>{\n            // Use the silent fetch option to avoid showing loading indicators during polling\n            fetchData(false);\n        }, 10000); // Increased to 10 seconds to reduce load\n        // Cleanup function to prevent memory leaks and state updates after unmount\n        return ()=>{\n            isMounted = false;\n            if (pollingIntervalRef.current) {\n                clearInterval(pollingIntervalRef.current);\n                pollingIntervalRef.current = null;\n            }\n            console.log(\"[DEBUG] DiscussionMessages cleanup - interval cleared for discussionId:\", discussionId);\n        };\n    }, [\n        discussionId\n    ]); // Only re-run when discussionId changes\n    const [selectedSubDiscussion, setSelectedSubDiscussion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isNewSubDiscussionOpen, setIsNewSubDiscussionOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [newSubDiscussionTitle, setNewSubDiscussionTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [newMessage, setNewMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const handleNewSubDiscussion = ()=>{\n        setIsNewSubDiscussionOpen(true);\n    };\n    const handleCreateSubDiscussion = async ()=>{\n        if (newSubDiscussionTitle.trim()) {\n            try {\n                console.log(\"[DEBUG] Creating sub-discussion with discussionId:\", discussionId);\n                const response = await fetch(\"/api/subdiscussions\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"auth_token\") || \"default-token\")\n                    },\n                    body: JSON.stringify({\n                        discussionId: discussionId,\n                        title: newSubDiscussionTitle.trim()\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to create sub-discussion\");\n                }\n                const newSubDiscussion = await response.json();\n                // Add the new sub-discussion to the state\n                setSubDiscussions((prev)=>[\n                        ...prev,\n                        {\n                            id: newSubDiscussion.id,\n                            title: newSubDiscussion.title,\n                            createdAt: \"just now\",\n                            lastMessageAt: \"just now\",\n                            messages: [],\n                            progress: 0\n                        }\n                    ]);\n                setNewSubDiscussionTitle(\"\");\n                setIsNewSubDiscussionOpen(false);\n            } catch (error) {\n                console.error(\"Error creating sub-discussion:\", error);\n                // Fallback to client-side creation if API fails\n                setSubDiscussions((prev)=>[\n                        ...prev,\n                        {\n                            id: Date.now(),\n                            title: newSubDiscussionTitle.trim(),\n                            createdAt: \"just now\",\n                            lastMessageAt: \"just now\",\n                            messages: [],\n                            progress: 0\n                        }\n                    ]);\n                setNewSubDiscussionTitle(\"\");\n                setIsNewSubDiscussionOpen(false);\n            }\n        }\n    };\n    const handleSendMessage = async (e)=>{\n        e.preventDefault();\n        if (newMessage.trim()) {\n            // Create a temporary ID for the pending message\n            const tempId = \"temp-\".concat(Date.now());\n            // Create a pending message to show immediately\n            const pendingMessage = {\n                id: tempId,\n                author: (user === null || user === void 0 ? void 0 : user.full_name) || \"You\",\n                content: newMessage.trim(),\n                timestamp: \"just now\",\n                isPending: true\n            };\n            console.log(\"[DEBUG] Creating pending message:\", pendingMessage);\n            console.log(\"[DEBUG] Selected sub-discussion:\", selectedSubDiscussion ? selectedSubDiscussion.id : \"none\");\n            // Call onMessageSent callback to notify parent that a message was sent\n            if (!selectedSubDiscussion && onMessageSent) {\n                onMessageSent();\n            }\n            // Add the pending message to the UI immediately\n            if (selectedSubDiscussion) {\n                // Update the selected sub-discussion with the new message\n                const updatedSubDiscussion = {\n                    ...selectedSubDiscussion,\n                    messages: [\n                        ...selectedSubDiscussion.messages,\n                        pendingMessage\n                    ],\n                    lastMessageAt: \"just now\"\n                };\n                // Update the sub-discussion in the state\n                setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? updatedSubDiscussion : sub));\n                // Also update the selectedSubDiscussion state to show the message immediately\n                setSelectedSubDiscussion(updatedSubDiscussion);\n                console.log(\"[DEBUG] Added message to sub-discussion UI:\", updatedSubDiscussion.messages.length);\n            } else {\n                // Add to both messages and pendingMessages for main discussion\n                setMessages((prev)=>[\n                        ...prev,\n                        pendingMessage\n                    ]);\n                setPendingMessages((prev)=>[\n                        ...prev,\n                        pendingMessage\n                    ]);\n                console.log(\"[DEBUG] Added message to main discussion UI\");\n            }\n            // Clear the input field immediately\n            setNewMessage(\"\");\n            try {\n                // Send the message to the server\n                const response = await fetch(\"/api/messages\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"auth_token\") || \"default-token\")\n                    },\n                    body: JSON.stringify({\n                        discussion_id: discussionId,\n                        subdiscussion_id: (selectedSubDiscussion === null || selectedSubDiscussion === void 0 ? void 0 : selectedSubDiscussion.id) || null,\n                        content: pendingMessage.content,\n                        username: (user === null || user === void 0 ? void 0 : user.full_name) || \"Anonymous\"\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to send message\");\n                }\n                const newMessageData = await response.json();\n                console.log(\"[DEBUG] Message saved to server with ID:\", newMessageData.id);\n                // Update the pending message with the server ID\n                if (selectedSubDiscussion) {\n                    // Create updated messages array with the server ID\n                    const updatedMessages = selectedSubDiscussion.messages.map((msg)=>msg.id.toString() === tempId ? {\n                            ...msg,\n                            id: newMessageData.id,\n                            serverId: newMessageData.id,\n                            isPending: false\n                        } : msg);\n                    // Create updated sub-discussion object\n                    const updatedSubDiscussion = {\n                        ...selectedSubDiscussion,\n                        messages: updatedMessages,\n                        lastMessageAt: \"just now\"\n                    };\n                    // Update the sub-discussion in the state\n                    setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? updatedSubDiscussion : sub));\n                    // Also update the selectedSubDiscussion state to show the confirmed message\n                    setSelectedSubDiscussion(updatedSubDiscussion);\n                    console.log(\"[DEBUG] Updated sub-discussion messages with server ID:\", updatedMessages.length);\n                } else {\n                    // Update main discussion messages\n                    setMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                id: newMessageData.id,\n                                serverId: newMessageData.id,\n                                isPending: false\n                            } : msg));\n                    // Update the pending message in the pendingMessages array\n                    setPendingMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                id: newMessageData.id,\n                                serverId: newMessageData.id,\n                                isPending: false\n                            } : msg));\n                    console.log(\"[DEBUG] Updated main discussion messages with server ID\");\n                }\n            } catch (error) {\n                console.error(\"Error sending message:\", error);\n                // The message is already in the UI, so we don't need to add it again\n                // Just mark it as failed so the user knows it didn't send\n                if (selectedSubDiscussion) {\n                    setSubDiscussions((prev)=>prev.map((sub)=>sub.id === selectedSubDiscussion.id ? {\n                                ...sub,\n                                messages: sub.messages.map((msg)=>msg.id.toString() === tempId ? {\n                                        ...msg,\n                                        failed: true\n                                    } : msg)\n                            } : sub));\n                } else {\n                    setMessages((prev)=>prev.map((msg)=>msg.id.toString() === tempId ? {\n                                ...msg,\n                                failed: true\n                            } : msg));\n                }\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-6\",\n        children: [\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center items-center py-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 485,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2 text-gray-600\",\n                        children: \"Loading messages...\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 486,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 484,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: selectedSubDiscussion ? ()=>setSelectedSubDiscussion(null) : onBack,\n                                variant: \"outline\",\n                                className: \"text-gray-600 hover:text-gray-900\",\n                                children: \"← Back\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 491,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                        className: \"text-xl font-semibold text-gray-900\",\n                                        children: selectedSubDiscussion ? selectedSubDiscussion.title : discussionTitle\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 499,\n                                        columnNumber: 13\n                                    }, this),\n                                    selectedSubDiscussion && selectedSubDiscussion.progress !== undefined && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-600\",\n                                        children: [\n                                            \"Progress: \",\n                                            selectedSubDiscussion.progress,\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 503,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 498,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 490,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex gap-2\",\n                        children: !selectedSubDiscussion && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            onClick: handleNewSubDiscussion,\n                            className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n                            children: \"+ New Sub-discussion\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 511,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 509,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 489,\n                columnNumber: 7\n            }, this),\n            !selectedSubDiscussion && subDiscussions.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-medium text-gray-900 mb-3\",\n                        children: \"Sub-discussions\"\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 523,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-2\",\n                        children: subDiscussions.map((sub)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                onClick: ()=>setSelectedSubDiscussion(sub),\n                                className: \"p-3 border rounded-md hover:bg-blue-50 cursor-pointer transition-colors\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                        className: \"font-medium text-gray-900\",\n                                        children: sub.title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 531,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-sm text-gray-500\",\n                                        children: [\n                                            sub.messages.length,\n                                            \" messages • Last message \",\n                                            sub.lastMessageAt\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 532,\n                                        columnNumber: 17\n                                    }, this)\n                                ]\n                            }, sub.id, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 526,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 524,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 522,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-4 mb-6 max-h-[600px] overflow-y-auto\",\n                children: (selectedSubDiscussion ? selectedSubDiscussion.messages : messages).map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"justify-end\" : \"justify-start\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-w-xs sm:max-w-md md:max-w-lg rounded-lg p-3 \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"bg-blue-500 text-white rounded-br-none\" : \"bg-gray-100 text-gray-900 rounded-bl-none\"),\n                            children: [\n                                message.author !== (user === null || user === void 0 ? void 0 : user.full_name) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs font-medium text-gray-500 mb-1\",\n                                    children: message.author\n                                }, void 0, false, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 557,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-sm\",\n                                    children: message.content\n                                }, void 0, false, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 561,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs mt-1 \".concat(message.author === (user === null || user === void 0 ? void 0 : user.full_name) ? \"text-blue-100\" : \"text-gray-500\"),\n                                    children: [\n                                        message.timestamp,\n                                        message.isPending && \" • Sending...\",\n                                        message.failed && \" • Failed to send\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                    lineNumber: 562,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 549,\n                            columnNumber: 13\n                        }, this)\n                    }, message.id, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 543,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 541,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSendMessage,\n                className: \"p-4 border-t\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            value: newMessage,\n                            onChange: (e)=>setNewMessage(e.target.value),\n                            placeholder: \"Type your message...\",\n                            className: \"flex-1 rounded-full border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 576,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: \"bg-indigo-600 text-white px-4 py-2 rounded-full hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\",\n                            children: \"Send\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 583,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                    lineNumber: 575,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 574,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.Dialog, {\n                open: isNewSubDiscussionOpen,\n                onOpenChange: setIsNewSubDiscussionOpen,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogHeader, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogTitle, {\n                            children: \"Create New Sub-discussion\"\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 594,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 593,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogContent, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-4 py-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                        children: \"Sub-discussion Title\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 599,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_input__WEBPACK_IMPORTED_MODULE_3__.Input, {\n                                        value: newSubDiscussionTitle,\n                                        onChange: (e)=>setNewSubDiscussionTitle(e.target.value),\n                                        placeholder: \"Enter sub-discussion title...\",\n                                        className: \"w-full\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                        lineNumber: 602,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 598,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                            lineNumber: 597,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 596,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_popup__WEBPACK_IMPORTED_MODULE_4__.DialogFooter, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                variant: \"secondary\",\n                                onClick: ()=>setIsNewSubDiscussionOpen(false),\n                                children: \"Cancel\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 612,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                onClick: handleCreateSubDiscussion,\n                                className: \"bg-blue-600 hover:bg-blue-700 text-white\",\n                                disabled: !newSubDiscussionTitle.trim(),\n                                children: \"Create Sub-discussion\"\n                            }, void 0, false, {\n                                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                                lineNumber: 618,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                        lineNumber: 611,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n                lineNumber: 592,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/abhishekyadav/Desktop/INFO2222/INFO2222_PROJECT_PHASE1/Threadflow_Main/src/components/DiscussionMessages.tsx\",\n        lineNumber: 482,\n        columnNumber: 5\n    }, this);\n}\n_s(DiscussionMessages, \"lZeoeJy54AhqKIuN/2qN7yqxWXM=\", false, function() {\n    return [\n        _contexts_AuthContext__WEBPACK_IMPORTED_MODULE_5__.useAuth\n    ];\n});\n_c = DiscussionMessages;\nvar _c;\n$RefreshReg$(_c, \"DiscussionMessages\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/DiscussionMessages.tsx\n"));

/***/ })

});